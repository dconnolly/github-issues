[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14833",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14833/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14833/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14833/events",
    "html_url": "https://github.com/rails/rails/pull/14833",
    "id": 31922420,
    "number": 14833,
    "title": "Fixed Attribute Inheritance Issue ",
    "user": {
      "login": "jyao6",
      "id": 1476949,
      "avatar_url": "https://avatars.githubusercontent.com/u/1476949?",
      "gravatar_id": "c53ffd2d0f420ce45eabce046dea80ef",
      "url": "https://api.github.com/users/jyao6",
      "html_url": "https://github.com/jyao6",
      "followers_url": "https://api.github.com/users/jyao6/followers",
      "following_url": "https://api.github.com/users/jyao6/following{/other_user}",
      "gists_url": "https://api.github.com/users/jyao6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jyao6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jyao6/subscriptions",
      "organizations_url": "https://api.github.com/users/jyao6/orgs",
      "repos_url": "https://api.github.com/users/jyao6/repos",
      "events_url": "https://api.github.com/users/jyao6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jyao6/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-21T20:29:23Z",
    "updated_at": "2014-04-21T20:29:23Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14833",
      "html_url": "https://github.com/rails/rails/pull/14833",
      "diff_url": "https://github.com/rails/rails/pull/14833.diff",
      "patch_url": "https://github.com/rails/rails/pull/14833.patch"
    },
    "body": "See https://github.com/rails/rails/issues/14672\r\n\r\nSlightly modified the patch made by @bradleyjucsc, should pass all tests.\r\n@matthewd, let me know if you think any more cleanup should be done."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14832",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14832/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14832/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14832/events",
    "html_url": "https://github.com/rails/rails/pull/14832",
    "id": 31893135,
    "number": 14832,
    "title": "Unify the behaviour of two `tld_length`.",
    "user": {
      "login": "cctiger36",
      "id": 536950,
      "avatar_url": "https://avatars.githubusercontent.com/u/536950?",
      "gravatar_id": "a2ebb05d0c47847c5033e1c3e75e5800",
      "url": "https://api.github.com/users/cctiger36",
      "html_url": "https://github.com/cctiger36",
      "followers_url": "https://api.github.com/users/cctiger36/followers",
      "following_url": "https://api.github.com/users/cctiger36/following{/other_user}",
      "gists_url": "https://api.github.com/users/cctiger36/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cctiger36/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cctiger36/subscriptions",
      "organizations_url": "https://api.github.com/users/cctiger36/orgs",
      "repos_url": "https://api.github.com/users/cctiger36/repos",
      "events_url": "https://api.github.com/users/cctiger36/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cctiger36/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-21T12:13:03Z",
    "updated_at": "2014-04-21T12:13:03Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14832",
      "html_url": "https://github.com/rails/rails/pull/14832",
      "diff_url": "https://github.com/rails/rails/pull/14832.diff",
      "patch_url": "https://github.com/rails/rails/pull/14832.patch"
    },
    "body": "The `tld_length` in cookie options and the one in ActionDispatch::Http::URL have different behaviour.\r\n\r\nFor example when I set the session_store with:\r\n\r\n    MyApp::Application.config.session_store :cookie_store, domain: :all, tld_length: 2\r\n\r\nAnd suppose the url is `sub1.sub2.example.com`.\r\n\r\nThen the TLD will be `example.com`.\r\n\r\nBut when I set the `tld_length` option of action_dispatch to 2:\r\n\r\n    config.action_dispatch.tld_length = 2\r\n\r\nThen the TLD will be `sub2.example.com`.\r\n\r\nThese different behaviour made me confused.\r\n\r\nMaybe it should be unified to the same behaviour?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14830",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14830/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14830/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14830/events",
    "html_url": "https://github.com/rails/rails/issues/14830",
    "id": 31882142,
    "number": 14830,
    "title": "link_to_if and link_to_unless does not output block content as link_to does",
    "user": {
      "login": "kidwm",
      "id": 822446,
      "avatar_url": "https://avatars.githubusercontent.com/u/822446?",
      "gravatar_id": "75307af344414a724528f5ba3920d01c",
      "url": "https://api.github.com/users/kidwm",
      "html_url": "https://github.com/kidwm",
      "followers_url": "https://api.github.com/users/kidwm/followers",
      "following_url": "https://api.github.com/users/kidwm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kidwm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kidwm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kidwm/subscriptions",
      "organizations_url": "https://api.github.com/users/kidwm/orgs",
      "repos_url": "https://api.github.com/users/kidwm/repos",
      "events_url": "https://api.github.com/users/kidwm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kidwm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-04-21T06:02:30Z",
    "updated_at": "2014-04-21T09:39:20Z",
    "closed_at": null,
    "body": "```erb\r\n<%= link_to_if link.length > 0, link do %>\r\n  <div>Banner</div>\r\n<% end %>\r\n```\r\nThe output is fine when link is empty.\r\n\r\nBut when link is not empty it output:\r\n```<a href=\"/\">http://example.com/</a>```\r\n\r\nHowever I expected this:\r\n```\r\n<a href=\"http://example.com/\">\r\n  <div>Banner</div>\r\n</a>\r\n```\r\nIsn't it more sensible? Or should we add an option to change this behavior?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14829",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14829/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14829/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14829/events",
    "html_url": "https://github.com/rails/rails/issues/14829",
    "id": 31881988,
    "number": 14829,
    "title": "def destroy method in 'Getting Started'",
    "user": {
      "login": "l0010o0001l",
      "id": 5507015,
      "avatar_url": "https://avatars.githubusercontent.com/u/5507015?",
      "gravatar_id": "f4a58af33e059a8ff6109f55768da542",
      "url": "https://api.github.com/users/l0010o0001l",
      "html_url": "https://github.com/l0010o0001l",
      "followers_url": "https://api.github.com/users/l0010o0001l/followers",
      "following_url": "https://api.github.com/users/l0010o0001l/following{/other_user}",
      "gists_url": "https://api.github.com/users/l0010o0001l/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l0010o0001l/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l0010o0001l/subscriptions",
      "organizations_url": "https://api.github.com/users/l0010o0001l/orgs",
      "repos_url": "https://api.github.com/users/l0010o0001l/repos",
      "events_url": "https://api.github.com/users/l0010o0001l/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l0010o0001l/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/needs+feedback",
        "name": "needs feedback",
        "color": "ededed"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-21T05:55:53Z",
    "updated_at": "2014-04-21T17:42:16Z",
    "closed_at": null,
    "body": "When introducing the 'def destroy' functionality in the Getting Started tutorial, I ran into issues. \r\n\r\nThe link you must provide in 'index.html.erb' is fine, and the 'def destroy' function is fine in 'articles_controller.rb'.\r\n\r\nWhen I did exactly as the tutorial suggested, the 'Destroy' link next to each blog post did not pick up the destroy function.\r\n\r\nYou need to add a line in \\blog\\app\\views\\layouts\\application.html.erb:\r\n<%= javascript_include_tag \"application\" %> (I added this right under the stylesheet tag)\r\n\r\nAnd in \\blog\\app\\assets\\javascripts\\application.js, delete the period at the very end of the file. Now everything runs perfectly for me. :)\r\n\r\nCheers!"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14828",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14828/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14828/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14828/events",
    "html_url": "https://github.com/rails/rails/pull/14828",
    "id": 31873427,
    "number": 14828,
    "title": "Clarify code examples in Getting Started Guide",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?",
      "gravatar_id": "fe0722ed20075f3ef352fcbc77354cb4",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-20T22:13:32Z",
    "updated_at": "2014-04-20T22:13:32Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14828",
      "html_url": "https://github.com/rails/rails/pull/14828",
      "diff_url": "https://github.com/rails/rails/pull/14828.diff",
      "patch_url": "https://github.com/rails/rails/pull/14828.patch"
    },
    "body": "This PR builds on #14822 and #14815.\r\n\r\nCompared to #14822, as per suggestions by @schneems it no\r\nlonger uses ellipsis marks without a comment hash and adds a\r\ncomplete controller code example for reference after the destroy\r\naction in the tutorial.\r\n\r\nThis PR updates the Getting Started tutorial to clarify where and how\r\nto add controller actions, and in which order as per convention. It\r\nalso attempts to improve some of the grammar and explanations.\r\n\r\nPreviously, beginners could easily find themselves adding controller\r\nactions without indentation, and, after the example code to add the\r\ncreate and private article_params methods, they could easily end up\r\nadding controller actions underneath the private method, which does\r\nnot work and leaves them confused.\r\n\r\nThis PR should hopefully help avoid some confusion for them and\r\nimprove their first experience with Rails.\r\n\r\n[skip ci]"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14827",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14827/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14827/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14827/events",
    "html_url": "https://github.com/rails/rails/pull/14827",
    "id": 31872719,
    "number": 14827,
    "title": "Adds the ability to pass options to enum",
    "user": {
      "login": "edelpero",
      "id": 1726530,
      "avatar_url": "https://avatars.githubusercontent.com/u/1726530?",
      "gravatar_id": "375b7e3e6b2365fdd0f127f4e224f4dc",
      "url": "https://api.github.com/users/edelpero",
      "html_url": "https://github.com/edelpero",
      "followers_url": "https://api.github.com/users/edelpero/followers",
      "following_url": "https://api.github.com/users/edelpero/following{/other_user}",
      "gists_url": "https://api.github.com/users/edelpero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edelpero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edelpero/subscriptions",
      "organizations_url": "https://api.github.com/users/edelpero/orgs",
      "repos_url": "https://api.github.com/users/edelpero/repos",
      "events_url": "https://api.github.com/users/edelpero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edelpero/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-20T21:23:46Z",
    "updated_at": "2014-04-21T09:39:16Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14827",
      "html_url": "https://github.com/rails/rails/pull/14827",
      "diff_url": "https://github.com/rails/rails/pull/14827.diff",
      "patch_url": "https://github.com/rails/rails/pull/14827.patch"
    },
    "body": "I love Rails flexibility and I thought it would be nice if you could pass some options to enum. You can pass options to enum as a block:\r\n\r\n```ruby\r\nclass Conversation < ActiveRecord::Base\r\n  enum status: { active: 0, archived: 1 } do |config|\r\n    config.skip   = :writer, :reader, :accessor, :question_marks, :updates, :scopes\r\n    config.prefix = true\r\n  end\r\nend\r\n```\r\n\r\n**skip** will avoid creating methods you don't want, you don't need or want to avoid some collision. If you pass:\r\n\r\n - ***:writer***, this will avoid overriding `conversation.status=`\r\n - ***:reader***, this will avoid overriding `conversation.status`\r\n - ***:accessor***, this will avoid overriding `conversation.status=` and `conversation.status`\r\n - ***:question_marks***, this will avoid defining `conversation.active?` and `conversation.archived?`\r\n - ***:updates***, this will avoid defining `conversation.active!` and `conversation.archived!`\r\n - ***:scopes***, this will avoid defining `Conversation.active` and `Conversation.archived`\r\n\r\n**prefix** will add the name of the field as a prefix to the new defined methods:\r\n\r\n```ruby\r\n  conversation.status_active! # update method\r\n  conversation.status_active? # question_mark method\r\n  Conversation.status_active  # scope method\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14824",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14824/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14824/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14824/events",
    "html_url": "https://github.com/rails/rails/issues/14824",
    "id": 31870994,
    "number": 14824,
    "title": "Wrong inferred name for a HABTM auxiliar table inside a schema",
    "user": {
      "login": "mparodi",
      "id": 1238560,
      "avatar_url": "https://avatars.githubusercontent.com/u/1238560?",
      "gravatar_id": "25424c6943fcef514cf2a1e3059d1668",
      "url": "https://api.github.com/users/mparodi",
      "html_url": "https://github.com/mparodi",
      "followers_url": "https://api.github.com/users/mparodi/followers",
      "following_url": "https://api.github.com/users/mparodi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mparodi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mparodi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mparodi/subscriptions",
      "organizations_url": "https://api.github.com/users/mparodi/orgs",
      "repos_url": "https://api.github.com/users/mparodi/repos",
      "events_url": "https://api.github.com/users/mparodi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mparodi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 5,
    "created_at": "2014-04-20T19:34:55Z",
    "updated_at": "2014-04-21T10:29:04Z",
    "closed_at": null,
    "body": "In PgSQL, when two models in a schema are associated through a has_and_belongs_to_many association, the name infered for the auxiliar table is wrong.\r\n\r\nFor instance:\r\n\r\n```ruby\r\nclass Music::Song < ActiveRecord::Base\r\n  self.table_name = \"music.songs\"\r\n  has_and_belongs_to_many :albums\r\nend\r\n\r\nclass Music::Album < ActiveRecord::Base\r\n  self.table_name = \"music.albums\"\r\n  has_and_belongs_to_many :songs\r\nend\r\n```\r\n\r\n```ruby\r\nMusic::Song.includes(:albums).first\r\n```\r\n\r\n```sql\r\nSELECT DISTINCT \"music\".\"songs\".\"id\", \"music\".\"songs\".\"id\" AS alias_0\r\nFROM \"music\".\"songs\"\r\n  LEFT OUTER JOIN \"music\".\"albums_music\" ON \"music\".\"albums_music\".\"song_id\" = \"music\".\"songs\".\"id\"\r\n  LEFT OUTER JOIN \"music\".\"albums\" ON \"music\".\"albums\".\"id\" = \"music\".\"albums_music\".\"album_id\"\r\nORDER BY \"music\".\"songs\".\"id\" ASC\r\nLIMIT 1\r\n```\r\n\r\nHere **\"music\".\"albums_music\"** should have been **\"music\".\"albums_songs\"**, but somehow ActiveRecord is using the name of the first table plus the name schema.\r\n\r\nIt can be fixed adding **join_table: \"music.albums_songs\"** in the models, but I'm guessing it shouldn't be needed."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14814",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14814/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14814/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14814/events",
    "html_url": "https://github.com/rails/rails/pull/14814",
    "id": 31860486,
    "number": 14814,
    "title": "Added XX-Month format to month_name helper",
    "user": {
      "login": "eric-chahin",
      "id": 4285655,
      "avatar_url": "https://avatars.githubusercontent.com/u/4285655?",
      "gravatar_id": "8325786bd49cf0ef925ecb7917e1522c",
      "url": "https://api.github.com/users/eric-chahin",
      "html_url": "https://github.com/eric-chahin",
      "followers_url": "https://api.github.com/users/eric-chahin/followers",
      "following_url": "https://api.github.com/users/eric-chahin/following{/other_user}",
      "gists_url": "https://api.github.com/users/eric-chahin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eric-chahin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eric-chahin/subscriptions",
      "organizations_url": "https://api.github.com/users/eric-chahin/orgs",
      "repos_url": "https://api.github.com/users/eric-chahin/repos",
      "events_url": "https://api.github.com/users/eric-chahin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eric-chahin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-20T05:04:03Z",
    "updated_at": "2014-04-20T16:18:06Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14814",
      "html_url": "https://github.com/rails/rails/pull/14814",
      "diff_url": "https://github.com/rails/rails/pull/14814.diff",
      "patch_url": "https://github.com/rails/rails/pull/14814.patch"
    },
    "body": "Finishing up @anyu's PR https://github.com/rails/rails/pull/9162."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14812",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14812/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14812/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14812/events",
    "html_url": "https://github.com/rails/rails/issues/14812",
    "id": 31855414,
    "number": 14812,
    "title": "WHERE condition on eager_load fails to use table_name",
    "user": {
      "login": "jeisen",
      "id": 408427,
      "avatar_url": "https://avatars.githubusercontent.com/u/408427?",
      "gravatar_id": "fbaf05640abe49a8ffb1a518b406d6f2",
      "url": "https://api.github.com/users/jeisen",
      "html_url": "https://github.com/jeisen",
      "followers_url": "https://api.github.com/users/jeisen/followers",
      "following_url": "https://api.github.com/users/jeisen/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeisen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeisen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeisen/subscriptions",
      "organizations_url": "https://api.github.com/users/jeisen/orgs",
      "repos_url": "https://api.github.com/users/jeisen/repos",
      "events_url": "https://api.github.com/users/jeisen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeisen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-19T22:03:38Z",
    "updated_at": "2014-04-19T23:44:50Z",
    "closed_at": null,
    "body": "While the name of the association attribute can be used in Model.where(:foo => bar), even when the table_name on a model is overridden, the SQL generated inside a Model.eager_load(:foo).where() call incorrectly ignores the true table_name. For example, given two models Publisher (table_name = 'tracker_publishers') and Book (table_name = 'tracker_books'), the query must be written like this:\r\n\r\n```ruby\r\nBook.eager_load(:publisher).where(:tracker_publishers => {:id => nil}).first\r\n```\r\n\r\nGiven the ability to query on a relationship using Model.where, this should work, but generates incorrect SQL:\r\n\r\n```ruby\r\nBook.eager_load(:publisher).where(:publisher => {:id => nil}).first\r\n```\r\n\r\nSelf-contained test demonstrating this issue: https://gist.github.com/jeisen/11098943"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14807",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14807/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14807/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14807/events",
    "html_url": "https://github.com/rails/rails/issues/14807",
    "id": 31836926,
    "number": 14807,
    "title": "Error:Could not find \"test/test_helper.rb\" in any of your source paths, when run `rails new`",
    "user": {
      "login": "xautjzd",
      "id": 2144697,
      "avatar_url": "https://avatars.githubusercontent.com/u/2144697?",
      "gravatar_id": "2e710318eddcea0549aae4369f4bc0f6",
      "url": "https://api.github.com/users/xautjzd",
      "html_url": "https://github.com/xautjzd",
      "followers_url": "https://api.github.com/users/xautjzd/followers",
      "following_url": "https://api.github.com/users/xautjzd/following{/other_user}",
      "gists_url": "https://api.github.com/users/xautjzd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xautjzd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xautjzd/subscriptions",
      "organizations_url": "https://api.github.com/users/xautjzd/orgs",
      "repos_url": "https://api.github.com/users/xautjzd/repos",
      "events_url": "https://api.github.com/users/xautjzd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xautjzd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/needs+feedback",
        "name": "needs feedback",
        "color": "ededed"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-19T03:38:41Z",
    "updated_at": "2014-04-21T10:45:58Z",
    "closed_at": null,
    "body": "my ruby version is: `2.0.0`, and rails version is `4.0.2`. Everytime I run `rails new xxx`, I will get the error:\r\n```\r\nCould not find \"test/test_helper.rb\" in any of your source paths. Your current source paths are: \r\n/home/xautjzd/.rvm/gems/ruby-2.0.0-p353/gems/railties-4.0.2/lib/rails/generators/rails/app/templates\r\n```\r\n**Another question**\r\nwhen I execute `gem install rails -v 4.0.4 --no-ri --no-rdoc`,  I will get the error:\r\n```\r\nERROR:  Error installing rails:\r\n\tinvalid gem: package is corrupt, exception while verifying: undefined method `size' for nil:NilClass (NoMethodError) in /home/xautjzd/.rvm/gems/ruby-2.0.0-p353/cache/activesupport-4.0.4.gem\r\n```\r\nbut installing 4.0.2, It's all right.Why?\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14803",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14803/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14803/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14803/events",
    "html_url": "https://github.com/rails/rails/pull/14803",
    "id": 31823362,
    "number": 14803,
    "title": "Fixed a problem where `sum` used with a `group` was not returning a Hash.",
    "user": {
      "login": "kuldeepaggarwal",
      "id": 1930730,
      "avatar_url": "https://avatars.githubusercontent.com/u/1930730?",
      "gravatar_id": "01b503429af49547f75e78abcf5e48cb",
      "url": "https://api.github.com/users/kuldeepaggarwal",
      "html_url": "https://github.com/kuldeepaggarwal",
      "followers_url": "https://api.github.com/users/kuldeepaggarwal/followers",
      "following_url": "https://api.github.com/users/kuldeepaggarwal/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuldeepaggarwal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuldeepaggarwal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuldeepaggarwal/subscriptions",
      "organizations_url": "https://api.github.com/users/kuldeepaggarwal/orgs",
      "repos_url": "https://api.github.com/users/kuldeepaggarwal/repos",
      "events_url": "https://api.github.com/users/kuldeepaggarwal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuldeepaggarwal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 14,
    "created_at": "2014-04-18T20:39:38Z",
    "updated_at": "2014-04-20T17:10:17Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14803",
      "html_url": "https://github.com/rails/rails/pull/14803",
      "diff_url": "https://github.com/rails/rails/pull/14803.diff",
      "patch_url": "https://github.com/rails/rails/pull/14803.patch"
    },
    "body": "\\cc @senny"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14802",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14802/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14802/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14802/events",
    "html_url": "https://github.com/rails/rails/pull/14802",
    "id": 31821658,
    "number": 14802,
    "title": "Raise only when different included blocks are defined",
    "user": {
      "login": "razum2um",
      "id": 122018,
      "avatar_url": "https://avatars.githubusercontent.com/u/122018?",
      "gravatar_id": "d197afc4702f4a8a8059e72af6e129f6",
      "url": "https://api.github.com/users/razum2um",
      "html_url": "https://github.com/razum2um",
      "followers_url": "https://api.github.com/users/razum2um/followers",
      "following_url": "https://api.github.com/users/razum2um/following{/other_user}",
      "gists_url": "https://api.github.com/users/razum2um/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/razum2um/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/razum2um/subscriptions",
      "organizations_url": "https://api.github.com/users/razum2um/orgs",
      "repos_url": "https://api.github.com/users/razum2um/repos",
      "events_url": "https://api.github.com/users/razum2um/events{/privacy}",
      "received_events_url": "https://api.github.com/users/razum2um/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-18T20:10:47Z",
    "updated_at": "2014-04-21T10:58:13Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14802",
      "html_url": "https://github.com/rails/rails/pull/14802",
      "diff_url": "https://github.com/rails/rails/pull/14802.diff",
      "patch_url": "https://github.com/rails/rails/pull/14802.patch"
    },
    "body": "Perhaps, raise of error when **same** module gets loaded twice isn't best choice\r\n\r\nThis happens when module files are loaded first time (e.g. while app reloading) and further required by hand (because some lib don't expect such preloading) - e.g. see ctran/annotate_models#181 for\r\n```\r\nUnable to annotate concerns/promotional.rb:\r\nCannot define multiple 'included' blocks for a Concern\r\n```\r\n\r\nSee #10652 and #10650 for initial idea.\r\nAlso checked, that Proc#source_location works on jruby & rbx, too"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14801",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14801/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14801/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14801/events",
    "html_url": "https://github.com/rails/rails/pull/14801",
    "id": 31821305,
    "number": 14801,
    "title": "Fix inconsistent behavior from String#pluralize",
    "user": {
      "login": "kuldeepaggarwal",
      "id": 1930730,
      "avatar_url": "https://avatars.githubusercontent.com/u/1930730?",
      "gravatar_id": "01b503429af49547f75e78abcf5e48cb",
      "url": "https://api.github.com/users/kuldeepaggarwal",
      "html_url": "https://github.com/kuldeepaggarwal",
      "followers_url": "https://api.github.com/users/kuldeepaggarwal/followers",
      "following_url": "https://api.github.com/users/kuldeepaggarwal/following{/other_user}",
      "gists_url": "https://api.github.com/users/kuldeepaggarwal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kuldeepaggarwal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kuldeepaggarwal/subscriptions",
      "organizations_url": "https://api.github.com/users/kuldeepaggarwal/orgs",
      "repos_url": "https://api.github.com/users/kuldeepaggarwal/repos",
      "events_url": "https://api.github.com/users/kuldeepaggarwal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kuldeepaggarwal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-18T20:04:12Z",
    "updated_at": "2014-04-21T10:24:05Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14801",
      "html_url": "https://github.com/rails/rails/pull/14801",
      "diff_url": "https://github.com/rails/rails/pull/14801.diff",
      "patch_url": "https://github.com/rails/rails/pull/14801.patch"
    },
    "body": "```text\r\n# Before:\r\n  When calling String#pluralize with count=1 then it returned same\r\n  string, but with count other than 1, returned new string.\r\n\r\n# After:\r\n  String#pluralize always return a new string.\r\n\r\n  => Prevent mutation of a string inadvertently.\r\n```\r\n\r\n\\cc @rafaelfranca "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14800",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14800/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14800/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14800/events",
    "html_url": "https://github.com/rails/rails/pull/14800",
    "id": 31818537,
    "number": 14800,
    "title": "Return false when trying to save destroyed record",
    "user": {
      "login": "sikachu",
      "id": 4912,
      "avatar_url": "https://avatars.githubusercontent.com/u/4912?",
      "gravatar_id": "f1c4a3bb1606cc4a61711e61e2fe6146",
      "url": "https://api.github.com/users/sikachu",
      "html_url": "https://github.com/sikachu",
      "followers_url": "https://api.github.com/users/sikachu/followers",
      "following_url": "https://api.github.com/users/sikachu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sikachu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sikachu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sikachu/subscriptions",
      "organizations_url": "https://api.github.com/users/sikachu/orgs",
      "repos_url": "https://api.github.com/users/sikachu/repos",
      "events_url": "https://api.github.com/users/sikachu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sikachu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-18T19:19:36Z",
    "updated_at": "2014-04-21T17:43:22Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14800",
      "html_url": "https://github.com/rails/rails/pull/14800",
      "diff_url": "https://github.com/rails/rails/pull/14800.diff",
      "patch_url": "https://github.com/rails/rails/pull/14800.patch"
    },
    "body": "Saving destroyed record weren't adding the record back to the database anyway, so we should return the proper result, which is `false`.\r\n\r\nOriginally I thought that we should just mark the record as read-only. However, that breaks the compatibility as we won't be able to call `destroy` twice anymore. So, just checking if the record was destroyed is actually cleaner."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14797",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14797/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14797/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14797/events",
    "html_url": "https://github.com/rails/rails/pull/14797",
    "id": 31808536,
    "number": 14797,
    "title": "Postgres range type: Fix handling of exclusive lower bound.",
    "user": {
      "login": "anm",
      "id": 460747,
      "avatar_url": "https://avatars.githubusercontent.com/u/460747?",
      "gravatar_id": "1dadc150177ce6e0d84bea378cfdd377",
      "url": "https://api.github.com/users/anm",
      "html_url": "https://github.com/anm",
      "followers_url": "https://api.github.com/users/anm/followers",
      "following_url": "https://api.github.com/users/anm/following{/other_user}",
      "gists_url": "https://api.github.com/users/anm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/anm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/anm/subscriptions",
      "organizations_url": "https://api.github.com/users/anm/orgs",
      "repos_url": "https://api.github.com/users/anm/repos",
      "events_url": "https://api.github.com/users/anm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/anm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/PostgreSQL",
        "name": "PostgreSQL",
        "color": "fbca04"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 3,
    "created_at": "2014-04-18T16:25:58Z",
    "updated_at": "2014-04-18T16:42:46Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14797",
      "html_url": "https://github.com/rails/rails/pull/14797",
      "diff_url": "https://github.com/rails/rails/pull/14797.diff",
      "patch_url": "https://github.com/rails/rails/pull/14797.patch"
    },
    "body": "Looks like this has all changed in newer versions of rails, but at least this is correct, and works for my case."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14791",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14791/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14791/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14791/events",
    "html_url": "https://github.com/rails/rails/pull/14791",
    "id": 31770534,
    "number": 14791,
    "title": "Changed extract_limit in class Column to return correct mysql float and ...",
    "user": {
      "login": "asn62",
      "id": 2424503,
      "avatar_url": "https://avatars.githubusercontent.com/u/2424503?",
      "gravatar_id": "4f7c240ec9c76a55ec4039fadb5c51c9",
      "url": "https://api.github.com/users/asn62",
      "html_url": "https://github.com/asn62",
      "followers_url": "https://api.github.com/users/asn62/followers",
      "following_url": "https://api.github.com/users/asn62/following{/other_user}",
      "gists_url": "https://api.github.com/users/asn62/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asn62/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asn62/subscriptions",
      "organizations_url": "https://api.github.com/users/asn62/orgs",
      "repos_url": "https://api.github.com/users/asn62/repos",
      "events_url": "https://api.github.com/users/asn62/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asn62/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/needs+feedback",
        "name": "needs feedback",
        "color": "ededed"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-17T23:07:52Z",
    "updated_at": "2014-04-20T14:05:30Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14791",
      "html_url": "https://github.com/rails/rails/pull/14791",
      "diff_url": "https://github.com/rails/rails/pull/14791.diff",
      "patch_url": "https://github.com/rails/rails/pull/14791.patch"
    },
    "body": "...double limits\r\n\r\nFixes https://github.com/rails/rails/issues/14135.\r\n\r\nWhen rails uses a float type with a limit in a mysql database, rails converts limits from 25..53 to double types to comply with mysql, but the rails schema still said float with no limit, causing loss of accuracy. This pull request causes floats and doubles to automatically set their limits to the mysql limits for those types (24 and 53, respectively).\r\n\r\nThere still may be an inconsistency; as shown in test_float_limits, rails automatically converts floats with limits <= 24 into floats and floats with limits >= 25 into doubles. However, according to the MySQL documentation, floats should have a precision of <= 23 and doubles should be >= 24. See MySQL documentation: http://dev.mysql.com/doc/refman/5.7/en/floating-point-types.html"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14789",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14789/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14789/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14789/events",
    "html_url": "https://github.com/rails/rails/pull/14789",
    "id": 31752588,
    "number": 14789,
    "title": "Add Array#in_columns_of method",
    "user": {
      "login": "klebervirgilio",
      "id": 245691,
      "avatar_url": "https://avatars.githubusercontent.com/u/245691?",
      "gravatar_id": "82dbebf8f98c9ce0f141cf10a6b7908a",
      "url": "https://api.github.com/users/klebervirgilio",
      "html_url": "https://github.com/klebervirgilio",
      "followers_url": "https://api.github.com/users/klebervirgilio/followers",
      "following_url": "https://api.github.com/users/klebervirgilio/following{/other_user}",
      "gists_url": "https://api.github.com/users/klebervirgilio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klebervirgilio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klebervirgilio/subscriptions",
      "organizations_url": "https://api.github.com/users/klebervirgilio/orgs",
      "repos_url": "https://api.github.com/users/klebervirgilio/repos",
      "events_url": "https://api.github.com/users/klebervirgilio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klebervirgilio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 7,
    "created_at": "2014-04-17T18:55:31Z",
    "updated_at": "2014-04-19T18:29:45Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14789",
      "html_url": "https://github.com/rails/rails/pull/14789",
      "diff_url": "https://github.com/rails/rails/pull/14789.diff",
      "patch_url": "https://github.com/rails/rails/pull/14789.patch"
    },
    "body": "Hi Folks,\r\n\r\nToday, I have faced a simple problem/challenge that might be useful for the community in general.\r\n\r\nGiven a array `[1,2,3,3,4,5,5,6,7,8,9,10]` I would like to split or iterate over it by columns and NOT by groups. \r\n\r\nI mean, instead of groups of 4 elements each(or not depending if the `fill_with` parameter is  `false` or not ), like: `[[1,2,3,4], [5,6,7,8], [9, 10, <SOME PADDING>?, <SOME PADDING>?]]`\r\n\r\nI'd like to split/iterate over:\r\n```ruby\r\n[\r\n  [1, 5, 9],\r\n  [2, 6, 10],\r\n  [3, 7],\r\n  [4, 8]\r\n]\r\n```\r\n\r\nSo, in order to do that added the `in_columns_of` method to Array.\r\n\r\nHopefully, it makes sense.\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14785",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14785/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14785/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14785/events",
    "html_url": "https://github.com/rails/rails/issues/14785",
    "id": 31714825,
    "number": 14785,
    "title": "[AR] STI: Class becomes! subclass",
    "user": {
      "login": "versioncontrol",
      "id": 527458,
      "avatar_url": "https://avatars.githubusercontent.com/u/527458?",
      "gravatar_id": "413ff2985979bee219caee4b4eadfbbf",
      "url": "https://api.github.com/users/versioncontrol",
      "html_url": "https://github.com/versioncontrol",
      "followers_url": "https://api.github.com/users/versioncontrol/followers",
      "following_url": "https://api.github.com/users/versioncontrol/following{/other_user}",
      "gists_url": "https://api.github.com/users/versioncontrol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/versioncontrol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/versioncontrol/subscriptions",
      "organizations_url": "https://api.github.com/users/versioncontrol/orgs",
      "repos_url": "https://api.github.com/users/versioncontrol/repos",
      "events_url": "https://api.github.com/users/versioncontrol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/versioncontrol/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 0,
    "created_at": "2014-04-17T10:00:10Z",
    "updated_at": "2014-04-17T13:40:16Z",
    "closed_at": null,
    "body": "#### STI subclass becomes! superclass\r\n\r\nThis test:\r\nhttps://github.com/rails/rails/blob/master/activerecord/test/cases/persistence_test.rb#L306 \r\nyields the following (truncated) update query after ```save!```:\r\n```\r\nUPDATE \"topics\" SET \"type\" = ? WHERE \"topics\".\"id\" = 2  [[\"type\", nil]]\r\n```\r\nThe test is passed, because a subclass is mutated to a superclass.\r\n___\r\n\r\n#### STI superclass becomes! subclass\r\n\r\nThe same test fails, when the mutation is reversed:\r\n```\r\n# persistence_test.rb\r\n  def test_update_sti_subclass_type\r\n    assert_instance_of Topic, topics(:first)\r\n\r\n    reply = topics(:first).becomes!(Reply)\r\n    assert_instance_of Reply, reply\r\n    reply.save!\r\n    assert_instance_of Reply, Reply.find(reply.id)\r\n  end\r\n```\r\nyields the following (truncated) update query after ```save!```:\r\n```\r\nUPDATE \"topics\" SET \"type\" = ? WHERE \"topics\".\"type\" IN ('Reply', 'UniqueReply', 'WrongReply', 'SillyReply', 'SillyUniqueReply') AND \"topics\".\"id\" = 1  [[\"type\", \"Reply\"]]\r\n```\r\nThe difference between the queries is the additional type condition, set to the new STI column. The type column in the store is still set to the old type, so the record is not found.\r\n___\r\nThis leads to two issues:\r\n1. Calling save, expects to raise a ```RecordNotFound```, when the record was not found and updated.\r\n2. Becomes! should unscope the finder to remove the type conditions, or even better, these should be set to the old type.\r\n\r\nI can work on a gist as well, if that's still helpful."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14775",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14775/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14775/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14775/events",
    "html_url": "https://github.com/rails/rails/issues/14775",
    "id": 31646631,
    "number": 14775,
    "title": "handle_positional_args incorrectly maps arguments when parameters from dynamic scope are missing",
    "user": {
      "login": "bbozo",
      "id": 633753,
      "avatar_url": "https://avatars.githubusercontent.com/u/633753?",
      "gravatar_id": "974c4e106b996fff51c25171e439b7b8",
      "url": "https://api.github.com/users/bbozo",
      "html_url": "https://github.com/bbozo",
      "followers_url": "https://api.github.com/users/bbozo/followers",
      "following_url": "https://api.github.com/users/bbozo/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbozo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbozo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbozo/subscriptions",
      "organizations_url": "https://api.github.com/users/bbozo/orgs",
      "repos_url": "https://api.github.com/users/bbozo/repos",
      "events_url": "https://api.github.com/users/bbozo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbozo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 6,
    "created_at": "2014-04-16T14:33:23Z",
    "updated_at": "2014-04-20T03:31:06Z",
    "closed_at": null,
    "body": "Imagine having a dynamic route in `config/routes.rb`:\r\n\r\n``` ruby\r\n  scope ':language' do\r\n    resources :something\r\n  end\r\n```\r\n\r\nin this case calling\r\n\r\n``` ruby\r\n  url_for @something\r\n```\r\n\r\nwill map to this url_for options hash\r\n\r\n``` ruby\r\n{\r\n  language: #<Something ...>,\r\n  id: nil,\r\n  format: nil\r\n}\r\n```\r\n\r\ninstead of the expected:\r\n\r\n``` ruby\r\n{\r\n  language: nil,\r\n  id: #<Something ...>,\r\n  format: nil\r\n}\r\n```\r\n\r\nand the error is falsely reported to be `\"missing mandatory key :id\"`\r\n\r\nWe have also encountered problems in production environment in passenger where the server process would raise a dozen `I18n` exceptions at a time because `images is not a valid locale` in cases where locale wouldn't get transferred for whatever reason.\r\n\r\nThis also creates a headache when you try to patch `url_for` to make sure the `:language` key would be present in all the necessary places by doing something in the lines of:\r\n\r\n``` ruby\r\n  def url_for(options = nil)\r\n    return super(options) unless options.is_a?(Hash) || options.nil?\r\n    options ||= {}\r\n\r\n    no_locales = options.delete(:no_locales)\r\n    # ...\r\n\r\n    rv = {}\r\n\r\n    # default url for options from application environment\r\n    rv.merge!(defined?(DEFAULT_URL_FOR_OPTIONS) ? DEFAULT_URL_FOR_OPTIONS : {})\r\n\r\n    # localization params for public routes\r\n    rv.merge!(Localization.url_fragment) if !current_user && !no_locales\r\n\r\n    # ....\r\n\r\n    # OK and now the original options\r\n    rv.merge! options\r\n\r\n    # yay !\r\n    super(rv)\r\n  end\r\n```\r\n\r\nbecause when `polymorphic_url` returns to `url_for` the options hash is completely off with key-values pairs being assigned in a basically random way on https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/route_set.rb#L231.\r\n\r\nOur use case is a bit more complicated then this, but the general problem is that `default_url_options` and `url_options` doesn't cut it for us because we need to make options fixes that are basically `<a>` tag-dependant - so in some places on a single page we'd fit the locales attributes and somewhere not - preferably without spamming `language: current_user.language` on half the links.\r\n\r\n\r\nBasically, my issue is that https://github.com/rails/rails/blob/master/actionpack/lib/action_dispatch/routing/route_set.rb#L241 zips array `args` which is `[#<Something ...>]` with array `keys` which is `[:language, :id]` by starting from `#first` which (at least from my perspective) seems as arbitrary a choice as starting from `#last` only difference is that starting from `#last` would end up with less surprising results when calling the polymorphic helper.\r\n\r\n\r\nThoughts? :-/"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14774",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14774/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14774/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14774/events",
    "html_url": "https://github.com/rails/rails/issues/14774",
    "id": 31632959,
    "number": 14774,
    "title": "\"TypeError: incompatible marshal file format (can't be read)\" when loading cookies",
    "user": {
      "login": "mreinsch",
      "id": 33982,
      "avatar_url": "https://avatars.githubusercontent.com/u/33982?",
      "gravatar_id": "2f0438cf56a9d890b487440d3a85043e",
      "url": "https://api.github.com/users/mreinsch",
      "html_url": "https://github.com/mreinsch",
      "followers_url": "https://api.github.com/users/mreinsch/followers",
      "following_url": "https://api.github.com/users/mreinsch/following{/other_user}",
      "gists_url": "https://api.github.com/users/mreinsch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mreinsch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mreinsch/subscriptions",
      "organizations_url": "https://api.github.com/users/mreinsch/orgs",
      "repos_url": "https://api.github.com/users/mreinsch/repos",
      "events_url": "https://api.github.com/users/mreinsch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mreinsch/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/32",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/32/labels",
      "id": 624453,
      "number": 32,
      "title": "4.1.1",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 9,
      "closed_issues": 7,
      "state": "open",
      "created_at": "2014-04-08T21:51:55Z",
      "updated_at": "2014-04-21T13:51:51Z",
      "due_on": "2014-05-20T07:00:00Z"
    },
    "comments": 5,
    "created_at": "2014-04-16T11:19:24Z",
    "updated_at": "2014-04-17T17:52:43Z",
    "closed_at": null,
    "body": "This issue baffled us today, and caused 500 errors for some of our users.\r\n\r\nThe issue was caused by using action_dispatch.cookies_serializer = :hybrid, having config.secret_token & secrets.secret_key_base both set and setting a signed cookie in the code. The signed cookie will use json for serialization.\r\n\r\nNo when reading the cookie in the next request, the UpgradeLegacySignedCookieJar is used, which will eventually call VerifyAndUpgradeLegacySignedMessage#verify_and_upgrade_legacy_signed_message which uses the ActiveSupport::MessageVerifier (without setting a serializer) which will then use Marshal to load the json data.\r\n\r\nLong story short, the UpgradeLegacySignedCookieJar is missing the SerializedCookieJars module.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14769",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14769/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14769/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14769/events",
    "html_url": "https://github.com/rails/rails/pull/14769",
    "id": 31603277,
    "number": 14769,
    "title": "Prevent Rails console log twice",
    "user": {
      "login": "andrielfn",
      "id": 232190,
      "avatar_url": "https://avatars.githubusercontent.com/u/232190?",
      "gravatar_id": "aaa9a4c49b7a6d3e4fe1f6f876b1d862",
      "url": "https://api.github.com/users/andrielfn",
      "html_url": "https://github.com/andrielfn",
      "followers_url": "https://api.github.com/users/andrielfn/followers",
      "following_url": "https://api.github.com/users/andrielfn/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrielfn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrielfn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrielfn/subscriptions",
      "organizations_url": "https://api.github.com/users/andrielfn/orgs",
      "repos_url": "https://api.github.com/users/andrielfn/repos",
      "events_url": "https://api.github.com/users/andrielfn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrielfn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 10,
    "created_at": "2014-04-16T00:27:33Z",
    "updated_at": "2014-04-17T18:06:22Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14769",
      "html_url": "https://github.com/rails/rails/pull/14769",
      "diff_url": "https://github.com/rails/rails/pull/14769.diff",
      "patch_url": "https://github.com/rails/rails/pull/14769.patch"
    },
    "body": "When `config.logger` is set in `development.rb`, for example, the console log is printed twice.\r\n\r\nBy default, Active Record sets a Logger for the console. Now we check if there is a Logger set in Rails configuration before Active Record instantiate its own.\r\n\r\nFixes #11415."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14760",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14760/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14760/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14760/events",
    "html_url": "https://github.com/rails/rails/issues/14760",
    "id": 31542243,
    "number": 14760,
    "title": "Assigning to an ActiveRecord has_one association with conditions results in conditions not being set in the associate",
    "user": {
      "login": "philippfrank",
      "id": 1238801,
      "avatar_url": "https://avatars.githubusercontent.com/u/1238801?",
      "gravatar_id": "8c2cacdce453a3e6f093fa1f3e103772",
      "url": "https://api.github.com/users/philippfrank",
      "html_url": "https://github.com/philippfrank",
      "followers_url": "https://api.github.com/users/philippfrank/followers",
      "following_url": "https://api.github.com/users/philippfrank/following{/other_user}",
      "gists_url": "https://api.github.com/users/philippfrank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philippfrank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philippfrank/subscriptions",
      "organizations_url": "https://api.github.com/users/philippfrank/orgs",
      "repos_url": "https://api.github.com/users/philippfrank/repos",
      "events_url": "https://api.github.com/users/philippfrank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philippfrank/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 2,
    "created_at": "2014-04-15T10:31:48Z",
    "updated_at": "2014-04-15T14:32:35Z",
    "closed_at": null,
    "body": "Let's assume I have a simple polymorphic association:\r\n\r\n```ruby\r\nclass Post < ActiveRecord::Base\r\n  has_one :main_image, -> { where :role => :main_image }, :as => :imagable, :class => Image\r\nend\r\n```\r\n\r\nThis works as expected:\r\n\r\n```ruby\r\npost = Post.create!\r\nmain_image = post.create_main_image!\r\n\r\n# -> main_image.role = 'main_image', main_image.imagable = #<Post...>\r\n```\r\n\r\nThis will not set the role attribute on the associate (the main_image):\r\n\r\n```ruby\r\npost = Post.create!\r\nmain_image = Image.create!\r\npost.send(:main_image=, main_image)\r\n\r\n# -> main_image.role = nil, main_image.imagable = #<Post...>\r\n```\r\n\r\nThe association condition *role* is nil in this case. I tried several versions (using the `:conditions`-key for example) but nothing worked."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14757",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14757/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14757/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14757/events",
    "html_url": "https://github.com/rails/rails/pull/14757",
    "id": 31527928,
    "number": 14757,
    "title": "Fix behavior of select! to be consistent with select #14752",
    "user": {
      "login": "estsauver",
      "id": 766985,
      "avatar_url": "https://avatars.githubusercontent.com/u/766985?",
      "gravatar_id": "24be6b5d6e90fdcd931f4dd65c414385",
      "url": "https://api.github.com/users/estsauver",
      "html_url": "https://github.com/estsauver",
      "followers_url": "https://api.github.com/users/estsauver/followers",
      "following_url": "https://api.github.com/users/estsauver/following{/other_user}",
      "gists_url": "https://api.github.com/users/estsauver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/estsauver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/estsauver/subscriptions",
      "organizations_url": "https://api.github.com/users/estsauver/orgs",
      "repos_url": "https://api.github.com/users/estsauver/repos",
      "events_url": "https://api.github.com/users/estsauver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/estsauver/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/32",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/32/labels",
      "id": 624453,
      "number": 32,
      "title": "4.1.1",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 9,
      "closed_issues": 7,
      "state": "open",
      "created_at": "2014-04-08T21:51:55Z",
      "updated_at": "2014-04-21T13:51:51Z",
      "due_on": "2014-05-20T07:00:00Z"
    },
    "comments": 9,
    "created_at": "2014-04-15T05:54:06Z",
    "updated_at": "2014-04-21T19:26:34Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14757",
      "html_url": "https://github.com/rails/rails/pull/14757",
      "diff_url": "https://github.com/rails/rails/pull/14757.diff",
      "patch_url": "https://github.com/rails/rails/pull/14757.patch"
    },
    "body": "Fixes #14752\r\n\r\nSelect mimics the block interface of arrays, but does not mock the\r\nblock interface for select!. This change introduces two changes to\r\nthe behavior of select!.\r\n\r\n1) if select! is called without an argument or a block, an error\r\nis raised (consistent with select)\r\n\r\n2) if select! is called with a block, it delegates the call to the\r\narray representation of the association.\r\n\r\nThanks to @eric-smartlove for pointing out the issue."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14754",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14754/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14754/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14754/events",
    "html_url": "https://github.com/rails/rails/issues/14754",
    "id": 31512527,
    "number": 14754,
    "title": "default strategy for delete_all differs between delete_all on has_many versus delete_all on has_many :through",
    "user": {
      "login": "eileencodes",
      "id": 1080678,
      "avatar_url": "https://avatars.githubusercontent.com/u/1080678?",
      "gravatar_id": "c44e1f7e22c3f23cff7bc130871047ef",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-14T22:58:25Z",
    "updated_at": "2014-04-15T14:15:46Z",
    "closed_at": null,
    "body": "@tenderlove and I noticed a discrepancy between how delete_all behaves on associated models if you're deleting the join model through the parent record versus deleting the associated model through the a parent record.\r\n\r\nConsidering the following model/relationships:\r\n```\r\nclass Category < ActiveRecord::Base\r\n  has_many :contacts, through: :categorizations\r\n  has_many :categorizations\r\nend\r\n\r\nclass Categorization < ActiveRecord::Base\r\n  belongs_to :category\r\n  belongs_to :contact\r\nend\r\n\r\nclass Contact < ActiveRecord::Base\r\n  has_many :categories, through: :categorizations\r\n  has_many :categorizations\r\nend\r\n```\r\nIf we were to attempt to delete the related categories contacts via the following code, the default strategy on a has_many :through (if no dependency is set) is to delete all the categorizations. (Note: This will delete the categorizations and not the contacts because of the relationships where categorization owns contact, not category - and because contact can belong to many categories).\r\n\r\n`category.contacts.delete_all`\r\n\r\nWill produce the following SQL:\r\n`DELETE FROM \"categorizations\" WHERE \"categorizations\".\"category_id\" = ? AND \"categorizations\".\"contact_id\" = 1`\r\n\r\nThat's fine except when deleting a has_many the default strategy is to :nullify. Since no dependency is set on the category and categorizations relationship, instead of deleting the records the category id will be set to null:\r\n\r\n`category.categorizations.delete_all`\r\n\r\nWill produce the following SQL:\r\n`UPDATE \"categorizations\" SET \"category_id\" = NULL WHERE \"categorizations\".\"category_id\" = ?`\r\n\r\nThe problem is since they both act on categorizations their default behavior should be the same. The behavior of defaulting to :nullify in one and not the other is unexpected.\r\n\r\nI think delete_all's default behavior should be to delete_all unless otherwise specified regardless if the delete_all is on a has_many or a has_many :through.\r\n\r\nThoughts?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14752",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14752/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14752/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14752/events",
    "html_url": "https://github.com/rails/rails/issues/14752",
    "id": 31505794,
    "number": 14752,
    "title": "ActiveRecord::QueryMethods#select! may be misleading",
    "user": {
      "login": "eric-smartlove",
      "id": 1595715,
      "avatar_url": "https://avatars.githubusercontent.com/u/1595715?",
      "gravatar_id": "89793694eb482ba3c34a25738934d02f",
      "url": "https://api.github.com/users/eric-smartlove",
      "html_url": "https://github.com/eric-smartlove",
      "followers_url": "https://api.github.com/users/eric-smartlove/followers",
      "following_url": "https://api.github.com/users/eric-smartlove/following{/other_user}",
      "gists_url": "https://api.github.com/users/eric-smartlove/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eric-smartlove/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eric-smartlove/subscriptions",
      "organizations_url": "https://api.github.com/users/eric-smartlove/orgs",
      "repos_url": "https://api.github.com/users/eric-smartlove/repos",
      "events_url": "https://api.github.com/users/eric-smartlove/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eric-smartlove/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/31",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/31/labels",
      "id": 600488,
      "number": 31,
      "title": "4.0.6",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 51,
      "closed_issues": 13,
      "state": "open",
      "created_at": "2014-03-17T16:51:45Z",
      "updated_at": "2014-04-21T13:51:51Z",
      "due_on": "2014-06-24T07:00:00Z"
    },
    "comments": 8,
    "created_at": "2014-04-14T21:17:40Z",
    "updated_at": "2014-04-15T16:52:23Z",
    "closed_at": null,
    "body": "When we call `select!` on a object which is a `ActiveRecord::Relation` instance, while we thought is was an `Array` instance, nothing raises but **the given block is ignored**.\r\n\r\nFor instance, if `User` is an `ActiveRecord` model, the given block in the code below is ignored:\r\n```ruby\r\nusers = User.all\r\n# Block is ignored\r\nusers.select!{|u| false}\r\n```\r\n\r\nI think it's misleading, especially since :\r\n* `#all` used to return an `Array` and it now returns an `ActiveRecord::Relation`\r\n* `#select` doesn't have this problem, so it promotes the idea that you don't have to care when you use `select`. However you *do* have to care when you use `select!` which contradict *Principle of Least Surprise*.\r\n\r\nI think `ActiveRecord::Relation#select!` should raise `ArgumentError` when a block is given so, at least, developer knows he has to care.\r\n\r\nNote: I don't make a pull request, because I'm still a Rails newbie, but I can make one, if my proposition is supported."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14743",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14743/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14743/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14743/events",
    "html_url": "https://github.com/rails/rails/pull/14743",
    "id": 31439252,
    "number": 14743,
    "title": "Patch ActionDispatch::Request::LOCALHOST to match any IPv4 127.0.0.0/8 l...",
    "user": {
      "login": "sriedel",
      "id": 199033,
      "avatar_url": "https://avatars.githubusercontent.com/u/199033?",
      "gravatar_id": "1a37609a4fc8733125d8a74c68cf6e2d",
      "url": "https://api.github.com/users/sriedel",
      "html_url": "https://github.com/sriedel",
      "followers_url": "https://api.github.com/users/sriedel/followers",
      "following_url": "https://api.github.com/users/sriedel/following{/other_user}",
      "gists_url": "https://api.github.com/users/sriedel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sriedel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sriedel/subscriptions",
      "organizations_url": "https://api.github.com/users/sriedel/orgs",
      "repos_url": "https://api.github.com/users/sriedel/repos",
      "events_url": "https://api.github.com/users/sriedel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sriedel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 1,
    "created_at": "2014-04-14T07:24:47Z",
    "updated_at": "2014-04-15T21:05:49Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14743",
      "html_url": "https://github.com/rails/rails/pull/14743",
      "diff_url": "https://github.com/rails/rails/pull/14743.diff",
      "patch_url": "https://github.com/rails/rails/pull/14743.patch"
    },
    "body": "...oopback address\r\n\r\nThe entire 127.0.0.0/8 range is assigned to the loopback address, not only 127.0.0.0/24. This patch allows ActionDispatch::Request::LOCALHOST to match any IPv4 127.0.0.0/8 loopback address."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14741",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14741/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14741/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14741/events",
    "html_url": "https://github.com/rails/rails/pull/14741",
    "id": 31437269,
    "number": 14741,
    "title": "Added documentation for the :param option for resourceful routing",
    "user": {
      "login": "zackperdue",
      "id": 687572,
      "avatar_url": "https://avatars.githubusercontent.com/u/687572?",
      "gravatar_id": "df07047d0a450fbceb694e65177d254c",
      "url": "https://api.github.com/users/zackperdue",
      "html_url": "https://github.com/zackperdue",
      "followers_url": "https://api.github.com/users/zackperdue/followers",
      "following_url": "https://api.github.com/users/zackperdue/following{/other_user}",
      "gists_url": "https://api.github.com/users/zackperdue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zackperdue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zackperdue/subscriptions",
      "organizations_url": "https://api.github.com/users/zackperdue/orgs",
      "repos_url": "https://api.github.com/users/zackperdue/repos",
      "events_url": "https://api.github.com/users/zackperdue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zackperdue/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/routing",
        "name": "routing",
        "color": "e102d8"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-14T06:34:03Z",
    "updated_at": "2014-04-14T07:32:37Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/14741",
      "html_url": "https://github.com/rails/rails/pull/14741",
      "diff_url": "https://github.com/rails/rails/pull/14741.diff",
      "patch_url": "https://github.com/rails/rails/pull/14741.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14734",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14734/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14734/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14734/events",
    "html_url": "https://github.com/rails/rails/issues/14734",
    "id": 31410388,
    "number": 14734,
    "title": "Polymorphic eager loading fails when using a string foreign key",
    "user": {
      "login": "seanlinsley",
      "id": 688886,
      "avatar_url": "https://avatars.githubusercontent.com/u/688886?",
      "gravatar_id": "140e42a7ba0209d3d277605610b008bf",
      "url": "https://api.github.com/users/seanlinsley",
      "html_url": "https://github.com/seanlinsley",
      "followers_url": "https://api.github.com/users/seanlinsley/followers",
      "following_url": "https://api.github.com/users/seanlinsley/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanlinsley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanlinsley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanlinsley/subscriptions",
      "organizations_url": "https://api.github.com/users/seanlinsley/orgs",
      "repos_url": "https://api.github.com/users/seanlinsley/repos",
      "events_url": "https://api.github.com/users/seanlinsley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanlinsley/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/32",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/32/labels",
      "id": 624453,
      "number": 32,
      "title": "4.1.1",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?",
        "gravatar_id": "0525b332aafb83307b32d9747a93de03",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 9,
      "closed_issues": 7,
      "state": "open",
      "created_at": "2014-04-08T21:51:55Z",
      "updated_at": "2014-04-21T13:51:51Z",
      "due_on": "2014-05-20T07:00:00Z"
    },
    "comments": 4,
    "created_at": "2014-04-13T16:31:07Z",
    "updated_at": "2014-04-17T08:12:44Z",
    "closed_at": null,
    "body": "The below fails with an exception on Rails master and 4.1, but works fine on 4.0 and 3.2.\r\n```ruby\r\nunless File.exist?('Gemfile')\r\n  File.write('Gemfile', <<-GEMFILE)\r\n    source 'https://rubygems.org'\r\n    gem 'rails', github: 'rails/rails'\r\n    gem 'sqlite3'\r\n  GEMFILE\r\n\r\n  system 'bundle'\r\nend\r\n\r\nrequire 'bundler'\r\nBundler.setup(:default)\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users\r\n  create_table :things\r\n\r\n  create_table :comments do |t|\r\n    t.references :author, polymorphic: true\r\n    t.string :resource_id,   null: false\r\n    t.string :resource_type, null: false\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass Thing < ActiveRecord::Base\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :author,   polymorphic: true\r\n  belongs_to :resource, polymorphic: true\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    c = Comment.new\r\n    c.author   = User.create!\r\n    c.resource = Thing.create!\r\n    c.save!\r\n  end\r\n\r\n  def test_polymorphic_includes_with_numeric_id\r\n    assert_equal Comment.all.to_a,\r\n                 Comment.includes(:author).to_a\r\n  end\r\n\r\n  def test_polymorphic_includes_with_string_id\r\n    assert_equal Comment.all.to_a,\r\n                 Comment.includes(:resource).to_a\r\n  end\r\nend\r\n```\r\n\r\n```\r\nFinished in 0.020612s, 97.0309 runs/s, 48.5154 assertions/s.\r\n\r\n  1) Error:\r\nBugTest#test_polymorphic_includes_with_string_id:\r\nNoMethodError: undefined method `each' for nil:NilClass\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:87:in `block in associated_records_by_owner'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:86:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:86:in `associated_records_by_owner'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/singular_association.rb:9:in `preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader/association.rb:20:in `run'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:136:in `block (2 levels) in preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:134:in `block in preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `flat_map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:133:in `preloaders_for_one'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:106:in `preloaders_on'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:94:in `block in preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `flat_map'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/associations/preloader.rb:93:in `preload'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:610:in `block in exec_queries'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:609:in `each'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:609:in `exec_queries'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:486:in `load'\r\n    ~/.rvm/gems/ruby-2.1.1/bundler/gems/rails-0bccde963c0b/activerecord/lib/active_record/relation.rb:231:in `to_a'\r\n    polymorphic-includes-test.rb:58:in `test_polymorphic_includes_with_string_id'\r\n\r\n2 runs, 1 assertions, 0 failures, 1 errors, 0 skips\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14731",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14731/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14731/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14731/events",
    "html_url": "https://github.com/rails/rails/issues/14731",
    "id": 31408456,
    "number": 14731,
    "title": "changed? method returns false if attribute number has not changed, but attribute_before_type_cast has. ",
    "user": {
      "login": "BroiSatse",
      "id": 2413414,
      "avatar_url": "https://avatars.githubusercontent.com/u/2413414?",
      "gravatar_id": "465ac2df8b712a8a67606bf088f26d7b",
      "url": "https://api.github.com/users/BroiSatse",
      "html_url": "https://github.com/BroiSatse",
      "followers_url": "https://api.github.com/users/BroiSatse/followers",
      "following_url": "https://api.github.com/users/BroiSatse/following{/other_user}",
      "gists_url": "https://api.github.com/users/BroiSatse/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BroiSatse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BroiSatse/subscriptions",
      "organizations_url": "https://api.github.com/users/BroiSatse/orgs",
      "repos_url": "https://api.github.com/users/BroiSatse/repos",
      "events_url": "https://api.github.com/users/BroiSatse/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BroiSatse/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-13T15:41:13Z",
    "updated_at": "2014-04-14T10:10:51Z",
    "closed_at": null,
    "body": "Example: model `Model` has an integer column `number`, with `numericality: { only_integer: true }` validation on it. let `model` be persisted record of `Model` class with number value equal 5. If the user tries to change it to `5foo`, `model.changed?` will return false, as after type cast the value has not changed. If this is the only change, save will never trigger validations, and this input is accepted as valid.\r\n\r\nThe problem occurs in Rails 4.0.1, it is not occurring in rails 3.2.13."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/14730",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/14730/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/14730/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/14730/events",
    "html_url": "https://github.com/rails/rails/issues/14730",
    "id": 31408265,
    "number": 14730,
    "title": "Sprockets::Rails::Helper::AssetFilteredError in Static#home",
    "user": {
      "login": "Fudoshiki",
      "id": 4083992,
      "avatar_url": "https://avatars.githubusercontent.com/u/4083992?",
      "gravatar_id": "72db88cbdb4e9f491e39b348f1253348",
      "url": "https://api.github.com/users/Fudoshiki",
      "html_url": "https://github.com/Fudoshiki",
      "followers_url": "https://api.github.com/users/Fudoshiki/followers",
      "following_url": "https://api.github.com/users/Fudoshiki/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fudoshiki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fudoshiki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fudoshiki/subscriptions",
      "organizations_url": "https://api.github.com/users/Fudoshiki/orgs",
      "repos_url": "https://api.github.com/users/Fudoshiki/repos",
      "events_url": "https://api.github.com/users/Fudoshiki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fudoshiki/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "url": "https://api.github.com/repos/rails/rails/labels/asset+pipeline",
        "name": "asset pipeline",
        "color": "d7e102"
      },
      {
        "url": "https://api.github.com/repos/rails/rails/labels/needs+feedback",
        "name": "needs feedback",
        "color": "ededed"
      }
    ],
    "state": "open",
    "assignee": null,
    "milestone": null,
    "comments": 4,
    "created_at": "2014-04-13T15:32:23Z",
    "updated_at": "2014-04-17T17:38:17Z",
    "closed_at": null,
    "body": "Asset filtered out and will not be served: add `Rails.application.config.assets.precompile += %w( static/home.css )` to `config/initializers/assets.rb` and restart your server\r\n\r\nShowing /app/views/static/home.html.haml where line #4 raised:\r\n\r\nAsset filtered out and will not be served: add `Rails.application.config.assets.precompile += %w( static/home.css )` to `config/initializers/assets.rb` and restart your server\r\n\r\n= content_for :content do\r\n    front page-home no-sidebars\r\n  - content_for :head do\r\n    = stylesheet_link_tag 'static/home', 'data-turbolinks-track' => true\r\n\r\nlatest rails 4.2.0 alpha from git"
  }
]
